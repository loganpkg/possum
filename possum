#! /bin/sh

#
# Copyright (c) 2024, 2025 Logan Ryan McLintock
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#


# possum:
# Organises photos and videos based on the create date stored inside the media.
# For my loving wife with her beautiful possum eyes.

set -e
set -u

if [ "$#" -ne 2 ]
then
    printf 'Usage: %s search_dir store_dir\n' "$0" 1>&2
    printf '       %s --verify store_dir\n' "$0" 1>&2
    exit 1
fi

store_dir=$(printf '%s' "$2" | sed -E 's~/+$~~')
export store_dir

if [ ! -d "$store_dir" ]
then
    printf '%s: Error: store_dir does not exist: %s\n' "$0" "$store_dir" 1>&2
    exit 1
fi


if [ "$1" = --verify ]
then
    cd "$store_dir" || exit 1

    hash_count=$(find hash -type f | wc -l)
    file_count=$(find . ! -path './hash/*' -type f | wc -l)

    if [ "$hash_count" -ne "$file_count" ]
    then
        printf '%s: hash count (%d) not equal to file count (%d)\n' \
            "$0" "$hash_count" "$file_count" 1>&2
        exit 1
    fi

    find hash -type f -exec sh -c \
        'set -e
         set -u
         fn="$1"
         printf "$fn" | sed -E "s~^hash/([0-9a-f]{2})/([0-9a-f]+)\.txt$~\1\2  ~"
         cat "$fn"
         ' sh '{}' \; | sha512sum -c

    exit 0
fi


search_dir=$(printf '%s' "$1" | sed -E 's~/+$~~')

if [ ! -d "$search_dir" ]
then
    printf '%s: Error: search_dir does not exist: %s\n' "$0" "$search_dir" 1>&2
    exit 1
fi


# Make directories writable
find "$store_dir" -type d -exec chmod 700 '{}' \;

tmp=$(mktemp)

find "$search_dir" -type f ! -empty \
    \( -iname '*.jpg'  \
    -o -iname '*.jpeg' \
    -o -iname '*.mov'  \
    -o -iname '*.mp4'  \
    -o -iname '*.heic' \
    \) \
    -print0 > "$tmp"

bad_ch_count=$(wc -l "$tmp" | cut -d ' ' -f 1)

if [ "$bad_ch_count" -ne 0 ]
then
    printf '%s: ERROR: File path contains a newline char\n' "$0" 1>&2
    exit 1
fi

tmp_nl=$(mktemp)
< "$tmp" tr '\0' '\n' > "$tmp_nl"


while IFS='' read -r file
do

    h=$(sha512sum "$file" | sed -E 's~^([0-9a-f]{2})([0-9a-f]+) .*$~\1/\2.txt~')
    hash_path="$store_dir/hash/$h"

    if [ -e "$hash_path" ]
    then
        printf 'Dupe: %s\n' "$file"
    else
        create_date=$(exiftool -CreateDate "$file" \
            | sed -E 's~Create Date +: ~~' | tr ': ' '_')

        if [ -z "$create_date" ] || [ "$create_date" = 0000_00_00_00_00_00 ]
        then
            printf 'No create date: %s\n' "$file"
        else
            ext=$(printf %s "$file" | grep -E -o '[^.]+$' \
                | tr '[:upper:]' '[:lower:]')

            hash_dir=$(dirname "$hash_path")
            mkdir -p "$hash_dir"

            year=$(printf %s "$create_date" | cut -c 1-4)
            month=$(printf %s "$create_date" | cut -c 6-7)

            mkdir -p "$store_dir/$year/$month"

            tie_break=''
            num=0
            while true
            do
                target_suffix="$year/$month/$create_date$tie_break.$ext"
                target="$store_dir/$target_suffix"
                if [ ! -e "$target" ]
                then
                    cp "$file" "$target"~
                    chmod 400 "$target"~
                    mv "$target"~ "$target"
                    printf '%s\n' "$target_suffix" > "$hash_path"~
                    chmod 400 "$hash_path"~
                    mv "$hash_path"~ "$hash_path"
                    break
                fi
                num=$((num + 1))
                tie_break=_"$num"
            done

            printf 'Copied: %s => %s\n' "$file" "$target"
        fi
    fi
done < "$tmp_nl"


# Protect from accidental file deletion
find "$store_dir" -type d -exec chmod 500 '{}' \;

rm "$tmp" "$tmp_nl"
