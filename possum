#! /bin/sh

#
# Copyright (c) 2024 Logan Ryan McLintock
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#


# possum:
# Organises photos and videos based on the create date stored inside the media.

set -e
set -u

if [ "$#" -ne 2 ]
then
    printf 'Usage: %s search_dir store_dir\n' "$0" 1>&2
    printf '       %s --verify store_dir\n' "$0" 1>&2
    exit 1
fi

export store_dir="$2"

if [ ! -d "$store_dir" ]
then
    printf '%s: Error: store_dir does not exist: %s\n' "$0" "$store_dir" 1>&2
    exit 1
fi


if [ "$1" = --verify ]
then

    cd "$store_dir" || exit 1

    data_count=$(find data -type f | wc -l)
    link_count=$(find . ! -path './data/*' -type f | wc -l)

    if [ "$data_count" -ne "$link_count" ]
    then
        printf '%s: data count (%d) not equal to link count (%d)\n' \
            "$0" "$data_count" "$link_count" 1>&2
        exit 1
    fi

    cd data || exit 1

    find . -type f | sed -E 's~^(.+/)([^/]+)$~\2 \1\2~' | sha512sum -c
    exit 0
fi


search_dir="$1"

if [ ! -d "$search_dir" ]
then
    printf '%s: Error: search_dir does not exist: %s\n' "$0" "$search_dir" 1>&2
    exit 1
fi


# Make directories writable
find "$store_dir" -type d -exec chmod 700 '{}' \;

tmp=$(mktemp)

find "$search_dir" -type f ! -empty \
    \( -iname '*.jpg'  \
    -o -iname '*.jpeg' \
    -o -iname '*.mov'  \
    -o -iname '*.mp4'  \
    -o -iname '*.heic' \
    \) \
    -print0 > "$tmp"

bad_ch_count=$(wc -l "$tmp" | cut -d ' ' -f 1)

if [ "$bad_ch_count" -ne 0 ]
then
    printf '%s: ERROR: File path contains a newline char\n' "$0" 1>&2
    exit 1
fi

tmp_nl=$(mktemp)
< "$tmp" tr '\0' '\n' > "$tmp_nl"



while IFS='' read -r file
do
hash=$(sha512sum "$file" | sed -E 's/^([^ ]+).*/\1/')
sub_dir=$(printf %s "$hash" | cut -c 1-2)

data_path="$store_dir/data/$sub_dir/$hash"

if [ -e "$data_path" ]
then
    printf 'Dupe: %s\n' "$file"
else

create_date=$(exiftool -CreateDate "$file" | sed -E 's/Create Date +: //' \
    | tr ': ' '_')

if [ -z "$create_date" ] || [ "$create_date" = 0000_00_00_00_00_00 ]
then
    printf 'No create date: %s\n' "$file"
else

ext=$(printf %s "$file" | grep -E -o '[^.]+$' | tr '[:upper:]' '[:lower:]')

mkdir -p "$store_dir/data/$sub_dir"

cp "$file" "$data_path"~
# Protect file contents
chmod 400 "$data_path"~
mv "$data_path"~ "$data_path"


year=$(printf %s "$create_date" | cut -c 1-4)
month=$(printf %s "$create_date" | cut -c 6-7)

mkdir -p "$store_dir/$year/$month"

tie_break=''
num=0
while true
do
    if ln "$data_path" "$store_dir/$year/$month/$create_date$tie_break.$ext" \
        2> /dev/null
    then
        break
    fi
    num=$((num + 1))
    tie_break=_"$num"
done

printf 'Done: %s\n' "$file"

fi
fi
done < "$tmp_nl"


# Protect from accidental file deletion
find "$store_dir" -type d -exec chmod 500 '{}' \;

rm "$tmp" "$tmp_nl"
